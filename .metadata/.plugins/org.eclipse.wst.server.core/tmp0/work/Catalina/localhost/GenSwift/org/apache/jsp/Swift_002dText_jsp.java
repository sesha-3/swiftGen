/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-09-26 12:45:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Swift_002dText_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\">\r\n");
      out.write("  <title>SwiftIndex</title>\r\n");
      out.write("      <link rel=\"stylesheet\" href=\"style/style.css\">\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\t<div class=\"bird-container bird-container--one\">\r\n");
      out.write("\t\t<div class=\"bird bird--one\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"bird-container bird-container--two\">\r\n");
      out.write("\t\t<div class=\"bird bird--two\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"bird-container bird-container--three\">\r\n");
      out.write("\t\t<div class=\"bird bird--three\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"bird-container bird-container--four\">\r\n");
      out.write("\t\t<div class=\"bird bird--four\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("  <div class=\"bird-container bird-container--five\">\r\n");
      out.write("\t\t<div class=\"bird bird--five\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"imagText\">\r\n");
      out.write("\t<img id=\"i\" src=\"resources/white.jpg\" />\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"img2\">\r\n");
      out.write("\t<img id=\"image\" src=\"resources/scb.jpg\" />\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"formText\">\r\n");
      out.write("<fieldset name=\"name\" >\r\n");
      out.write("  <legend style=\"text-align:center\"><strong>General Information</strong></legend>\r\n");
      out.write("    <table>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td><label for=\"20C\">Sender Message Reference</label></td>\r\n");
      out.write("        <td><input id=\"20C\" type=\"text\" name=\"accoutno\"></br></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td> <label for=\"23G\"> Function of Message   </label></br> </td>\r\n");
      out.write("         <td>  <select>\r\n");
      out.write("        <option value=\"\">f</option>\r\n");
      out.write("        </select> </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td>  <label for=\"98C\"> Date Preparation   </label></br></td>\r\n");
      out.write("        <td >   <input id=\"98C\" type=\"date\" name=\"amount\"></br> </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("  </fieldset>\r\n");
      out.write("  <br>\r\n");
      out.write("  <fieldset >\r\n");
      out.write("    <legend style=\"text-align:center\"><strong>Trade Details</strong></legend>\r\n");
      out.write("      <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <td>  <label for=\"98A\">Settlement Date </label> </td>\r\n");
      out.write("          <td >   <input id=\"98A\" type=\"date\" name=\"amount\"></br> </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("          <td>  <label for=\"35B\">Identification of Security </label> </td>\r\n");
      out.write("          <td >   <input id=\"35B\" type=\"text\" name=\"amount\"></br> </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<br>\r\n");
      out.write("<fieldset >\r\n");
      out.write("    <legend style=\"text-align:center\"><strong>Financial</strong></legend>\r\n");
      out.write("      <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <td>  <label for=\"36B\">Quantity to be Settled </label> </td>\r\n");
      out.write("          <td >   <input id=\"36B\" type=\"text\" name=\"amount\"></br> </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("          <td>  <label for=\"97A\">Account </label> </td>\r\n");
      out.write("          <td >   <input id=\"97A\" type=\"text\" name=\"amount\"></br> </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<br>\r\n");
      out.write("<fieldset >\r\n");
      out.write("    <legend style=\"text-align:center\"><strong>Settlement Details</strong></legend>\r\n");
      out.write("      <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <td>  <label for=\"22F\">Indicator</label> </td>\r\n");
      out.write("           <td>  <select>\r\n");
      out.write("        <option value=\"\">f</option>\r\n");
      out.write("        </select> </td>\r\n");
      out.write("\t\t <td>  <select>\r\n");
      out.write("        <option value=\"\">f</option>\r\n");
      out.write("        </select> </td>\r\n");
      out.write("      </table>\r\n");
      out.write("</fieldset>\r\n");
      out.write("<br>\r\n");
      out.write("<fieldset >\r\n");
      out.write("    <legend style=\"text-align:center\"><strong>Settlement Party</strong></legend>\r\n");
      out.write("      <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <td>  <label for=\"95A\">Party</label> </td>\r\n");
      out.write("           <td>  <select >\r\n");
      out.write("        <option value=\"\">f</option>\r\n");
      out.write("        </select> \r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<td >   <input type=\"text\" name=\"amount\"></br> </td>\r\n");
      out.write("        </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("</fieldset>\r\n");
      out.write("</br>\r\n");
      out.write("<div class=\"wrapper\" >\r\n");
      out.write("<button class=\"button\"  ><span>Proceed</span></button>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
